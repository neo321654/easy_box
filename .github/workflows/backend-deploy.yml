name: Deploy Backend

on:
  push:
    branches:
      - main
    paths:
      - 'easy_box_backend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./easy_box_backend
          push: true
          tags: 321654neo/easy_box_backend:latest

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -e
            cd ~/easy_box
            git fetch origin
            git reset --hard origin/main
            cd easy_box_backend

            echo "Creating .env file"
            cat <<EOF > .env
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}
            EOF

            echo "### (LOG) Containers before changes..."
            docker ps -a

            echo "### (LOG) Volumes before changes..."
            docker volume ls

            echo "### (PLAN B) Backing up database..."
            docker-compose -f docker-compose.prod.yml exec -T db pg_dump -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }} > ~/db_backup.sql
            echo "Backup created at ~/db_backup.sql"

            echo "### Recreating backend container safely..."
            docker-compose -f docker-compose.prod.yml stop backend
            docker-compose -f docker-compose.prod.yml rm -f backend
            docker-compose -f docker-compose.prod.yml up -d --build --remove-orphans

            echo "### Waiting for services to start..."
            sleep 15

            echo "### (LOG) Containers after changes..."
            docker ps -a

            echo "### Logs from DB container after startup:"
            docker-compose -f docker-compose.prod.yml logs db

            echo "### Logs from Backend container after startup:"
            docker-compose -f docker-compose.prod.yml logs backend

            echo "### Running migrations..."
            docker-compose -f docker-compose.prod.yml exec -T backend python manage.py migrate --noinput

            echo "### Deployment finished"

      - name: Clean up old Docker images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker image prune -af

      - name: Send Telegram message on success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ✅ Deployment Successful!
            Project: easy_box_backend
            Branch: ${{ github.ref_name }}
            Commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}

      - name: Send Telegram message on failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ❌ Deployment Failed!
            Project: easy_box_backend
            Branch: ${{ github.ref_name }}
            Workflow run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
